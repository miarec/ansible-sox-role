---
# Prepare for ansible run
- import_tasks: preflight.yml

# Install Sox and libraries from package when enabled
- name: Install from pacakage.
  when: not sox_install_from_source|bool
  block:
    - name: Check for package install on CentOS/RedHat 7.
      fail:
        msg: Sox must be compiled to support `mp3` on CentOS/RedHat7 systems. 'sox_install_from_source' must be 'true'.
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version == "7"


    - import_tasks: install_from_package.yml
      become: true

# Install Sox and libraries from source when enabled
- name: Install from source.
  block:
    # Verify variables are present
    - import_tasks: check_vars.yml

    # Instal Dependencies for downloading and compiling from source
    - import_tasks: dependencies.yml
      become: true

    # ----------------------------------
    # Libraries
    # ----------------------------------
    - name: Install base libraries.
      include_tasks: install_libraries_from_source.yml
      vars:
        library_config: "{{ outer_item }}"
      with_dict: "{{ sox_compile_base_library_config }}"
      loop_control:
        label: "{{ outer_item.key }}-{{ outer_item.value.version }}"
        loop_var: outer_item

    - name: Install optional libraries.
      block:
        - set_fact:
            _optional_libraries: []

        - name: Extract list of optional libraries from `sox_compile_optional_formats_config`.
          set_fact:
            _optional_libraries: "{{ _optional_libraries + item.value.libraries  }}"
          with_dict: "{{ sox_compile_optional_formats_config }}"
          loop_control:
            label: "{{ item.key }}"

        - name: Install optional libraries.
          include_tasks: install_libraries_from_source.yml
          vars:
            library_config: "{{ outer_item }}"
          with_dict: "{{ sox_compile_optional_library_config }}"
          loop_control:
            label: "{{ outer_item.key }}-{{ outer_item.value.version }}"
            loop_var: outer_item
          when: outer_item.key in _optional_libraries

      when: sox_compile_optional_formats_config|length > 0

    # ----------------------------------
    # Sox
    # ----------------------------------
    - name: Check if sox is installed.
      command: "which {{ sox_install_dir }}/sox"
      register: _sox_exists
      ignore_errors: true
      changed_when: false
      failed_when: false

    - name: Install sox from source.
      block:
        - set_fact:
            _configure_args: []

        - name: Extract configure arguments from "sox_compile_optional_formats_config" | sox
          set_fact:
            _configure_args: "{{ _configure_args + [ item.value.configure_args ] }}"
          with_dict: "{{ sox_compile_optional_formats_config }}"
          loop_control:
            label: "{{ item.key }}"

        - name: Render configure arguments | sox
          set_fact:
            _configure_args: "{{ _configure_args | join(' ') }} {{ sox_compile_optional_configure_args | join (' ') }}"

        - include_tasks: install_from_source.yml

      when: _sox_exists.rc != 0

  when: sox_install_from_source|bool
